Docker installation and guide,  youtube Link : https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa3pVbnlOMzE4dDE3SmF3c1NqRkxkU3J0elE4UXxBQ3Jtc0tuN2VJSi1QcnZOWjJvdnVJS3ZPSGIxMUkwSmtkQ25nUXVwd2xhaE9tWTBJRElVeEJfZDB6V0E5Z0hmMHZJSHhRLTJNVnc2WEVTMy10VjBiWUZFZFJXR296WWJGZ2Qxd0xTTkJzcC1ycmNZRW5OYlhVQQ&q=https%3A%2F%2Fbit.ly%2Fdevops-tutorials-tamil&v=6Ob-lECmzbk

install docker dependency,
	--> Java

Commands :

	sudo su

	yum install java-11 	# Java have to install,

	yum install docker -y 	# Docker installation,

	docker --version 	# to check version,

	docker pull httpd	# Pull the image from Docker, 

	docker images 		# Display on docker containers,
 
	docker ps 		# Display on Running containers,

	docker ps -a 		# Running and Stopped status, ps- mean by process, -a mean by all,

	docker run --name resume -d -p 70:80 saravanancseslm/resume	 # -d detach mode running background, -p Port 											number 70, 80 Respect port number ex, 											httpd running 80,  Docker name 												saravanancseslm/resume,

	docker start container id 	# Start the container image

	docker stop container id 	# stop the running container image

	docker rm container id		# Remove the container image

	docker rm -f container id	# It will remove force fully 

	docker exec -it "container id" /bin/bash	# Entering the container inside,

	docker exec name or ID uname # With out login execute operation
	
	docker exec jovial_vaughan touch /bin/test.txt # Creating file with out login inside container

	docker exec jovial_vaughan ls /bin/ # to check inside files
	
	docker exec jovial_vaughan cat /usr/local/apache2/htdocs/index.html # Read the file with out login inside 																			container

	docker cp /home/ec2-user/index.html 41821f4a2c7e:/usr/local/apache2/htdocs/ # Copying file to source to 																				Destination

	docker system df # it will display disk free

	docker stats # display over all usages,

	docker stats container name # display over usage on single container

	docker top #

	docker system prune # Remove unused container or images
	


Creating Docker files : for Apache or HTTPD web application

	# Need to create Docker file, same file should come on outside project Directory,

	# Docker file fist letter should be Capital,

	vi Dockerfile

	# Download httpd latest package
	FROM httpd:latest
	 
	# Name should add
	MAINTAINER "Saravanan"	 

	# It will Copy a file
	COPY ./Resume_V1/* /usr/local/apache2/htdocs	
 		
	docker build -t my-httpd-app .  # Build the docker image name my-httpd-app, one Dot have to give,

	docker images 		# Display on docker containers,

	docker tag my-httpd-app saravanancseslm/resuem01

	docker login

	docker push saravanancseslm/resuem01

	docker run -d -p -n  80:80 imagename


Creating Docker file for Java Application,

	# Need to create Docker file, same file should come on outside project Directory,

	# Docker file fist letter should be Capital,

	vi Dockerfile

	# Use the official OpenJDK image as the base image
	FROM openjdk:17-jdk-slim

	# Set the working directory in the container
	WORKDIR /app

	# Copy the packaged JAR file into the container
	COPY target/HelloWorld-1.0-SNAPSHOT-jar-with-dependencies.jar /app/HelloWorld.jar

	# Define the entry point to run the application
	CMD ["java", "-jar", "/app/HelloWorld.jar"]
 
	docker build -t Helloworld

	docker run Helloworld

	




Automation Jenkins,

	docker stop helloworld_container || true;
	docker rm -f helloworld_continer || true;
	docker image rm -f helloworld_130ct || true;
	docker build -t helloworld_130ct .;
	docker tag petshop2 sravanan/helloworld_130ct;
	docker login -u Saravanan -p *****;
	docker push Saravanan/helloworld_130ct;
	docker run -d --name hello -p 8080:80 Saravanan/helloworld_130ct;




